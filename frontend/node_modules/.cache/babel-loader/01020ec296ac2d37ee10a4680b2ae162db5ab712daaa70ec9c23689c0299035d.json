{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kbhar\\\\OneDrive\\\\Desktop\\\\projectYummi\\\\frontend\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { signupUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = {\n      username,\n      email,\n      password\n    };\n    console.log(formData); // Add this to verify data before sending\n\n    try {\n      const response = await signupUser(formData);\n      console.log(response.data);\n    } catch (error) {\n      console.error('Signup error', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: e => setUse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Signup, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","signupUser","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","formData","username","console","log","response","data","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","setUse","target","_c","$RefreshReg$"],"sources":["C:/Users/kbhar/OneDrive/Desktop/projectYummi/frontend/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { signupUser } from '../services/api';\r\n\r\nconst Signup = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const formData = { username, email, password };\r\n        \r\n        console.log(formData);  // Add this to verify data before sending\r\n        \r\n        try {\r\n            const response = await signupUser(formData);\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            console.error('Signup error', error);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Signup</h2>\r\n            <input\r\n                type =\"text\"\r\n                placeholder='username'\r\n                value={username}\r\n                onChange={(e) => setUse}\r\n\r\n               />\r\n            <input \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                value={email} \r\n                onChange={(e) => setEmail(e.target.value)} \r\n            />\r\n            <input \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                value={password} \r\n                onChange={(e) => setPassword(e.target.value)} \r\n            />\r\n            <button type=\"submit\">Signup</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG;MAAEC,QAAQ;MAAER,KAAK;MAAEE;IAAS,CAAC;IAE9CO,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CAAE;;IAExB,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMhB,UAAU,CAACY,QAAQ,CAAC;MAC3CE,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;EAGD,oBACIhB,OAAA;IAAMiB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBACzBlB,OAAA;MAAAkB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACftB,OAAA;MACIuB,IAAI,EAAE,MAAM;MACZC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEd,QAAS;MAChBe,QAAQ,EAAGlB,CAAC,IAAKmB;IAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CAAC,eACLtB,OAAA;MACIuB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEtB,KAAM;MACbuB,QAAQ,EAAGlB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACoB,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFtB,OAAA;MACIuB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEpB,QAAS;MAChBqB,QAAQ,EAAGlB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACoB,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFtB,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEf,CAAC;AAACpB,EAAA,CA5CID,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AA8CZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}